# Agent Definition Template
# Use this template when creating new agents

meta:
  version: "1.0.0"
  created: "YYYY-MM-DD"
  model: "sonnet"  # or other model
  color: "color-name"  # for UI visualization
  icon: "emoji"  # agent icon

agent:
  name: "Agent Name"  # Short, memorable name
  id: "agent-id"  # kebab-case identifier
  title: "Agent Title"  # Professional title
  description: "One-sentence description of what this agent does"
  
  when-to-use:
    - "Specific scenario 1"
    - "Specific scenario 2"
    - "Specific scenario 3"

persona:
  role: "Primary role description"
  
  focus: "Main area of expertise and responsibility"
  
  style: "Communication and work style (e.g., analytical, creative, systematic)"
  
  identity: "Who this agent is and how it approaches work"
  
  principles:
    - "First guiding principle (specific and measurable)"
    - "Second guiding principle"
    - "Third guiding principle"
    # 3-7 principles total

commands:
  - name: "command-name"
    description: "What this command does"
    task: "tasks/task-file.yaml"  # Optional: link to task
    parameters:  # Optional
      - "param1: description"
      - "param2: description"

dependencies:
  documentation:
    - "{project}/path/to/doc1.md"
    - "{project}/path/to/doc2.md"
    
  templates:
    - "templates/template-name.yaml"
    
  tasks:
    - "tasks/task-name.yaml"
    
  data:
    - "data/knowledge-base.md"

handoff-contracts:
  input:
    - type: "input-type-name"
      description: "What input this agent receives"
      source: "agent-id-or-human"
      schema:
        field1: "type and description"
        field2: "type and description"
      location: "where to find the input"  # Optional
      
  output:
    - type: "output-type-name"
      description: "What output this agent produces"
      format: "format (yaml, markdown, code, etc.)"
      schema:
        field1: "type and description"
        field2: "type and description"
      location: "where output is stored"
      requires-approval: false  # Optional: true if human approval needed
      
  next-agents:
    - agent: "next-agent-id"
      description: "Why this handoff occurs"
      input: "what from output they receive"
      trigger: "auto | if-passed | if-failed | if-condition | human-approval"
      parallel: false  # Optional: true if this can run in parallel with others

workflows:
  workflow-name:
    description: "What this workflow accomplishes"
    steps:
      - "Step 1 description"
      - "Step 2 description"
      - "Step 3 description"
      # Add as many steps as needed

# Optional: Additional sections specific to agent type
quality-standards:
  aspect1:
    - "Standard 1"
    - "Standard 2"
    
  aspect2:
    - "Standard 1"
    - "Standard 2"

# Optional: Constraints and limitations
constraints:
  must-do:
    - "Required behavior 1"
    - "Required behavior 2"
    
  must-not-do:
    - "Prohibited behavior 1"
    - "Prohibited behavior 2"

# Optional: Tools and integrations
tools:
  - name: "tool-name"
    purpose: "what it's used for"
    when: "when to use it"

# Optional: Operational notes
operational-notes:
  startup-behavior:
    - "What happens when agent activates"
    
  interaction-style:
    - "How agent communicates"
    
  error-handling:
    - "How agent handles errors"

# Template Usage Instructions:
# 1. Copy this template for new agent
# 2. Fill in all required fields
# 3. Remove optional sections not needed
# 4. Validate against organizational-principles.yaml
# 5. Ensure handoff contracts match connected agents
# 6. Update workflow-dag.yaml with new agent
# 7. Create command file in commands/
# 8. Get Manager approval before deploying

